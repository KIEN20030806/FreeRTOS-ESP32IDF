[1/10] Performing build step for 'bootloader'
[1/1] cmd.exe /C "cd /D D:\espressif_ins\Espressif\frameworks\esp-idf-v5.2.1\examples\get-started\bai6\Code\build\bootloader\esp-idf\esptool_py && D:\espressif_ins\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/examples/get-started/bai6/Code/build/bootloader/bootloader.bin"
Bootloader binary size 0x6860 bytes. 0x7a0 bytes (7%) free.
[2/8] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/main.c.obj
[3/8] Linking C static library esp-idf\main\libmain.a
[4/8] Generating ld/sections.ld
[5/8] Building C object CMakeFiles/main.elf.dir/project_elf_src_esp32.c.obj
[6/8] Linking CXX executable main.elf
[7/8] Generating binary image from built executable
esptool.py v4.7.0
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/examples/get-started/bai6/Code/build/main.bin
[8/8] cmd.exe /C "cd /D D:\espressif_ins\Espressif\frameworks\esp-idf-v5.2.1\examples\get-started\bai6\Code\build\esp-idf\esptool_py && D:\espressif_ins\Espressif\python_env\idf5.2_py3.11_env\Scripts\python.exe D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/components/partition_table/check_sizes.py --offset 0x8000 partition --type app D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/examples/get-started/bai6/Code/build/partition_table/partition-table.bin D:/espressif_ins/Espressif/frameworks/esp-idf-v5.2.1/examples/get-started/bai6/Code/build/main.bin"
main.bin binary size 0x2b540 bytes. Smallest app partition is 0x100000 bytes. 0xd4ac0 bytes (83%) free.
